[project]
name = "dbt-learning"
version = "0.1.0"
description = "Projet d'apprentissage DBT avec DuckDB"
authors = [{ name = "Eric", email = "eric@example.com" }]
dependencies = [
    "dbt-core>=1.6.0",
    "dbt-duckdb>=1.6.0",
    "duckdb>=0.9.0",
    "pandas>=2.0.0",
    "pyarrow>=12.0.0",
    "ruff>=0.12.11",
]
requires-python = ">=3.9"
readme = "README.md"
license = { text = "MIT" }

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pre-commit>=3.0.0",
    "pyyaml>=6.0.0",
]

[tool.ruff]
line-length = 120
target-version = "py39"
# Règles équivalentes à flake8 + quelques règles supplémentaires utiles
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E203", # whitespace before :
    "W503", # line break before binary operator
]

[tool.ruff.format]
# Configuration du formateur (remplace black)
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=. --cov-report=term-missing --cov-report=html"
